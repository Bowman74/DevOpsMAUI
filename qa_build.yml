# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- qa

variables:
  - group: BuildVariables
  - name: buildConfiguration
    value: 'Release'
  - name: outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/output'
  - name: codesignKey
    value: 'Apple Development: kevin Ford (S6DU94W64R)'
  - name: codesignProvisioningProfile
    value: 'LinkedIn Learning QRTracker iOS'

jobs:
- job: Build_Main
  displayName: 'Build Main'
  pool:
    vmImage: 'macos-latest'
    demands: xcode

  steps:

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'

  - task: CmdLine@2
    displayName: "dotnet workload restore"
    inputs:
      script: 'dotnet workload restore'

  - task: CmdLine@2
    displayName: "Selects a specific version of Xcode"
    inputs:
      script: 'sudo xcode-select -s /Applications/Xcode_16.2.app'

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'AppleDeveloperCertificate.p12'
      certPwd: '$(iOSCertPassword)'
  
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provProfileSecureFile: 'LinkedIn_Learning_QRTracker_iOS.mobileprovision'

  - task: DotNetCoreCLI@2
    displayName: 'Build project for iOS'
    inputs:
      command: publish
      publishWebProjects: false
      verbosityRestore: Diagnostic
      projects: 'QRTracker/QRTracker.csproj'
      arguments: '-f net9.0-ios --configuration $(buildConfiguration) 
      --output $(outputDirectory)/iOS -p:CodesignKey="$(codesignKey)" 
      -p:CodesignProvision="$(codesignProvisioningProfile)" 
      -p:CodesignEntitlements="Platforms/iOS/Entitlements.plist" 
      /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false'
      zipAfterPublish: false
    env:
        DISABLE_BITCODE: 'yes'
  
  - task: CopyFiles@2
    displayName: 'Copy file from Build to Staging'
    inputs:
        SourceFolder: '$(outputDirectory)/iOS/QRTracker'
        Contents: '*.ipa'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish the Staging Files.'
    inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  

 
