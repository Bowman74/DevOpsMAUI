# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - main

variables:
  - name: buildConfiguration
    value: 'Debug'
  - name: outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/output'

jobs:
- job: Build_Main
  displayName: 'Build Main'
  pool:
    vmImage: 'macos-latest'
    demands: xcode

  steps:

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'

  - task: CmdLine@2
    displayName: "dotnet workload restore"
    inputs:
      script: 'dotnet workload restore'

  - task: CmdLine@2
    displayName: "Selects a specific version of Xcode"
    inputs:
      script: 'sudo xcode-select -s /Applications/Xcode_16.2.app'

  - task: DotNetCoreCLI@2
    displayName: 'Build project for Android'
    inputs:
      command: build
      projects: 'QRTracker/QRTracker.csproj'
      arguments: '-f net9.0-android --configuration $(buildConfiguration) --output $(outputDirectory)/Android'

  - task: DotNetCoreCLI@2
    displayName: 'Build project for iOS'
    inputs:
      command: build
      projects: 'QRTracker/QRTracker.csproj'
      arguments: '-f net9.0-ios --configuration $(buildConfiguration) --output $(outputDirectory)/iOS'

  - task: DotNetCoreCLI@2
    displayName: 'Build project for MacOS'
    inputs:
      command: build
      projects: 'QRTracker/QRTracker.csproj'
      arguments: '-f net9.0-maccatalyst --configuration $(buildConfiguration) --output $(outputDirectory)/MacOS'

- job: Build_Windows
  displayName: 'Windows Main'
  pool:
    vmImage: 'windows-latest'

  steps:

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'

  - task: CmdLine@2
    displayName: "dotnet workload restore"
    inputs:
      script: 'dotnet workload restore'

  - task: DotNetCoreCLI@2
    displayName: 'Build project for Windows'
    inputs:
      command: build
      projects: 'QRTracker/QRTracker.csproj'
      arguments: '-f net9.0-windows10.0.19041.0 --configuration $(buildConfiguration) --output $(outputDirectory)/Windows'

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests'
    inputs:
      command: test
      projects: '**/*.Tests.csproj'
      arguments: '--configuration $(buildConfiguration)'